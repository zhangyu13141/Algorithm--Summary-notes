桶排序：建立一个数组，哪个数字出现一次，相应数字的下标所对应得存数字加一，
桶固定不变，数字找对应的位置，并且找到后加一，根据已经有得数组下标本来就是排序好的特性，来只把数字对应的数组下标加一来统计相同数字出现得次数
从小到大排序
#include <stdio.h>
int main(){
int a[11],i,j,t;
for(i=0;i<=10;i++){
a[i]=0;//初始化为零
}
for(i=1;i<=5;i++){
scanf("%d",&t);
a[t]++;//循环读入5个数
}
for(i=0;i<=10;i++)//循环判断
for(j=1;j<=a[i];j++){//出现几次就打印几次
printf("%d",i);
getchar();getchar();
return 0;
 }
}
M为桶的个数N为待排序的个数
时间复杂度O（M+N）
但是加入需要派叙述的范围是0~2000000，则需要申请2000001个变量，假如只对5个数排序，则有的树大，需要的空间太浪费
缺点就是浪费空间

给定两个字符串 s 和 t ，编写一个函数来判断 t 是否是 s 的字母异位词。

示例 1:

输入: s = "anagram", t = "nagaram"
输出: true
示例 2:

输入: s = "rat", t = "car"
输出: false
说明:
你可以假设字符串只包含小写字母。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/valid-anagram
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

bool isAnagram(char * s, char * t){
    int len1=strlen(s),len2=strlen(t);
    if(len1!=len2)return false;
    int flag[26]={0};
for(int j=0;j<len1;j++){
    flag[s[j]-'a']++;
    flag[t[j]-'a']--;
    
}
for(int k=0;k<26;k++)
if(flag[k]!=0) return false;
    return true; 
}


